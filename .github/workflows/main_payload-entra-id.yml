# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - payload-entra-id

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'
 
      - name: create .env
        run: |
          touch .env
          echo DATABASE_URI =${{ secrets.DATABASE_URI }} >> .env
          echo PAYLOAD_SECRET =${{ secrets.PAYLOAD_SECRET }} >> .env
          echo NEXT_PUBLIC_SERVER_URL =${{ secrets.NEXT_PUBLIC_SERVER_URL }} >> .env
          echo CRON_SECRET =${{ secrets.CRON_SECRET }} >> .env
          echo PREVIEW_SECRET =${{ secrets.PREVIEW_SECRET }} >> .env
          echo AUTH_TRUST_HOST =${{ secrets.AUTH_TRUST_HOST }} >> .env
          echo AUTH_URL =${{ secrets.AUTH_URL }} >> .env
          echo AUTH_SECRET =${{ secrets.AUTH_SECRET }} >> .env
          echo AUTH_MICROSOFT_ENTRA_ID_TENANT_ID =${{ secrets.AUTH_MICROSOFT_ENTRA_ID_TENANT_ID }} >> .env
          echo AUTH_MICROSOFT_ENTRA_ID_CLIENT_ID =${{ secrets.AUTH_MICROSOFT_ENTRA_ID_CLIENT_ID }} >> .env
          echo AUTH_MICROSOFT_ENTRA_ID_SECRET =${{ secrets.AUTH_MICROSOFT_ENTRA_ID_SECRET }} >> .env

      - name: Check if variables exist
        run: |
          source .env
          if [ -n "$DATABASE_URI" ]; then echo "DATABASE_URI is set"; else echo "DATABASE_URI is not set"; fi
    
      - name: npm install, build, and test
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_7EDF5836BD294C0182F3A46120AD253C }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_E82D9FECEB404EDD85AB41851317036D }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_F54FCA572DC74BE8A4E4CBAD2DDD50B7 }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'payload-entra-id'
          slot-name: 'Production'
          package: .
          
